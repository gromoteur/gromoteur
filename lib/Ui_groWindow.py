# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/kim/Dropbox/programmation/gromoteur2019/trunk/lib/groWindow.ui'
#
# Created by: PyQt5 UI code generator 5.12.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_GroMainWindow(object):
    def setupUi(self, GroMainWindow):
        GroMainWindow.setObjectName("GroMainWindow")
        GroMainWindow.resize(1232, 873)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(GroMainWindow.sizePolicy().hasHeightForWidth())
        GroMainWindow.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/images/gromoteurGmini.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        GroMainWindow.setWindowIcon(icon)
        GroMainWindow.setStyleSheet("")
        GroMainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.centralwidget = QtWidgets.QWidget(GroMainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.splitter_2 = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.corpuslistWidget = QtWidgets.QListWidget(self.splitter_2)
        self.corpuslistWidget.setMaximumSize(QtCore.QSize(250, 16777215))
        self.corpuslistWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"background-image : url(:/images/images/quartercogtrans.png);\n"
"background-position:bottom right;\n"
"background-repeat:no-repeat;\n"
"")
        self.corpuslistWidget.setMovement(QtWidgets.QListView.Snap)
        self.corpuslistWidget.setResizeMode(QtWidgets.QListView.Adjust)
        self.corpuslistWidget.setViewMode(QtWidgets.QListView.IconMode)
        self.corpuslistWidget.setObjectName("corpuslistWidget")
        self.splitter = QtWidgets.QSplitter(self.splitter_2)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.databaseContentGroupBox = QtWidgets.QGroupBox(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.databaseContentGroupBox.sizePolicy().hasHeightForWidth())
        self.databaseContentGroupBox.setSizePolicy(sizePolicy)
        self.databaseContentGroupBox.setObjectName("databaseContentGroupBox")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.databaseContentGroupBox)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.tableView = QtWidgets.QTableView(self.databaseContentGroupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableView.sizePolicy().hasHeightForWidth())
        self.tableView.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.tableView.setFont(font)
        self.tableView.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"background-image : url(:/images/images/welcome.png);\n"
"background-position:center;\n"
"background-repeat:no-repeat;\n"
"")
        self.tableView.setLineWidth(0)
        self.tableView.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked|QtWidgets.QAbstractItemView.EditKeyPressed)
        self.tableView.setProperty("showDropIndicator", False)
        self.tableView.setDragDropOverwriteMode(False)
        self.tableView.setAlternatingRowColors(False)
        self.tableView.setSortingEnabled(True)
        self.tableView.setObjectName("tableView")
        self.tableView.horizontalHeader().setCascadingSectionResizes(True)
        self.tableView.verticalHeader().setVisible(False)
        self.tableView.verticalHeader().setCascadingSectionResizes(True)
        self.tableView.verticalHeader().setDefaultSectionSize(29)
        self.tableView.verticalHeader().setSortIndicatorShown(False)
        self.gridLayout_2.addWidget(self.tableView, 1, 0, 1, 1)
        self.textualizationFrame = QtWidgets.QFrame(self.databaseContentGroupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textualizationFrame.sizePolicy().hasHeightForWidth())
        self.textualizationFrame.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.textualizationFrame.setFont(font)
        self.textualizationFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.textualizationFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.textualizationFrame.setObjectName("textualizationFrame")
        self.gridLayout = QtWidgets.QGridLayout(self.textualizationFrame)
        self.gridLayout.setContentsMargins(2, 0, 2, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.textualizations = QtWidgets.QComboBox(self.textualizationFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textualizations.sizePolicy().hasHeightForWidth())
        self.textualizations.setSizePolicy(sizePolicy)
        self.textualizations.setObjectName("textualizations")
        self.gridLayout.addWidget(self.textualizations, 1, 1, 1, 1)
        self.columnsButton = QtWidgets.QToolButton(self.textualizationFrame)
        self.columnsButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/images/images/column.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.columnsButton.setIcon(icon1)
        self.columnsButton.setCheckable(False)
        self.columnsButton.setPopupMode(QtWidgets.QToolButton.InstantPopup)
        self.columnsButton.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.columnsButton.setAutoRaise(False)
        self.columnsButton.setArrowType(QtCore.Qt.NoArrow)
        self.columnsButton.setObjectName("columnsButton")
        self.gridLayout.addWidget(self.columnsButton, 1, 3, 1, 1)
        self.delTextualButton = QtWidgets.QPushButton(self.textualizationFrame)
        self.delTextualButton.setEnabled(False)
        self.delTextualButton.setMaximumSize(QtCore.QSize(25, 16777215))
        self.delTextualButton.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/images/images/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.delTextualButton.setIcon(icon2)
        self.delTextualButton.setObjectName("delTextualButton")
        self.gridLayout.addWidget(self.delTextualButton, 1, 2, 1, 1)
        self.gridLayout_2.addWidget(self.textualizationFrame, 0, 0, 1, 1)
        self.tabWidget = QtWidgets.QTabWidget(self.splitter)
        self.tabWidget.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.tabWidget.setFont(font)
        self.tabWidget.setFocusPolicy(QtCore.Qt.TabFocus)
        self.tabWidget.setToolTip("")
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setObjectName("tabWidget")
        self.informationTab = QtWidgets.QWidget()
        self.informationTab.setObjectName("informationTab")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.informationTab)
        self.gridLayout_13.setObjectName("gridLayout_13")
        spacerItem = QtWidgets.QSpacerItem(685, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem, 0, 0, 1, 3)
        self.gridLayout_11 = QtWidgets.QGridLayout()
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.currentURLLabel_8 = QtWidgets.QLabel(self.informationTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentURLLabel_8.sizePolicy().hasHeightForWidth())
        self.currentURLLabel_8.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.currentURLLabel_8.setFont(font)
        self.currentURLLabel_8.setAlignment(QtCore.Qt.AlignCenter)
        self.currentURLLabel_8.setWordWrap(False)
        self.currentURLLabel_8.setObjectName("currentURLLabel_8")
        self.gridLayout_11.addWidget(self.currentURLLabel_8, 0, 0, 1, 1)
        self.commentTextEdit = QtWidgets.QPlainTextEdit(self.informationTab)
        self.commentTextEdit.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.commentTextEdit.sizePolicy().hasHeightForWidth())
        self.commentTextEdit.setSizePolicy(sizePolicy)
        self.commentTextEdit.setMinimumSize(QtCore.QSize(0, 0))
        self.commentTextEdit.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.commentTextEdit.setFont(font)
        self.commentTextEdit.setStyleSheet("")
        self.commentTextEdit.setObjectName("commentTextEdit")
        self.gridLayout_11.addWidget(self.commentTextEdit, 1, 0, 1, 1)
        self.gridLayout_13.addLayout(self.gridLayout_11, 0, 3, 2, 1)
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.pageSpinbox = QtWidgets.QSpinBox(self.informationTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pageSpinbox.sizePolicy().hasHeightForWidth())
        self.pageSpinbox.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pageSpinbox.setFont(font)
        self.pageSpinbox.setReadOnly(True)
        self.pageSpinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.pageSpinbox.setMaximum(9999999)
        self.pageSpinbox.setObjectName("pageSpinbox")
        self.gridLayout_3.addWidget(self.pageSpinbox, 0, 0, 1, 1)
        self.sentenceSpinbox = QtWidgets.QSpinBox(self.informationTab)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.sentenceSpinbox.setFont(font)
        self.sentenceSpinbox.setReadOnly(True)
        self.sentenceSpinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.sentenceSpinbox.setMaximum(9999999)
        self.sentenceSpinbox.setObjectName("sentenceSpinbox")
        self.gridLayout_3.addWidget(self.sentenceSpinbox, 1, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem1, 4, 0, 1, 1)
        self.wordSpinbox = QtWidgets.QSpinBox(self.informationTab)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.wordSpinbox.setFont(font)
        self.wordSpinbox.setReadOnly(True)
        self.wordSpinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.wordSpinbox.setMaximum(1000000000)
        self.wordSpinbox.setObjectName("wordSpinbox")
        self.gridLayout_3.addWidget(self.wordSpinbox, 2, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.informationTab)
        self.label_2.setObjectName("label_2")
        self.gridLayout_3.addWidget(self.label_2, 3, 0, 1, 1)
        self.gridLayout_13.addLayout(self.gridLayout_3, 1, 0, 1, 1)
        self.gridLayout_12 = QtWidgets.QGridLayout()
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.links2DoSpinbox = QtWidgets.QDoubleSpinBox(self.informationTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.links2DoSpinbox.sizePolicy().hasHeightForWidth())
        self.links2DoSpinbox.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.links2DoSpinbox.setFont(font)
        self.links2DoSpinbox.setReadOnly(True)
        self.links2DoSpinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.links2DoSpinbox.setDecimals(0)
        self.links2DoSpinbox.setMaximum(99999999.0)
        self.links2DoSpinbox.setObjectName("links2DoSpinbox")
        self.gridLayout_12.addWidget(self.links2DoSpinbox, 0, 0, 1, 1)
        self.linksDoneSpinbox = QtWidgets.QDoubleSpinBox(self.informationTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.linksDoneSpinbox.sizePolicy().hasHeightForWidth())
        self.linksDoneSpinbox.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.linksDoneSpinbox.setFont(font)
        self.linksDoneSpinbox.setReadOnly(True)
        self.linksDoneSpinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.linksDoneSpinbox.setDecimals(0)
        self.linksDoneSpinbox.setMaximum(99999999.0)
        self.linksDoneSpinbox.setObjectName("linksDoneSpinbox")
        self.gridLayout_12.addWidget(self.linksDoneSpinbox, 1, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_12.addItem(spacerItem2, 2, 0, 1, 1)
        self.gridLayout_10 = QtWidgets.QGridLayout()
        self.gridLayout_10.setObjectName("gridLayout_10")
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem3, 0, 0, 1, 1)
        self.recomputePushButton = QtWidgets.QPushButton(self.informationTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.recomputePushButton.sizePolicy().hasHeightForWidth())
        self.recomputePushButton.setSizePolicy(sizePolicy)
        self.recomputePushButton.setMinimumSize(QtCore.QSize(0, 40))
        self.recomputePushButton.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/images/images/calc.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.recomputePushButton.setIcon(icon3)
        self.recomputePushButton.setObjectName("recomputePushButton")
        self.gridLayout_10.addWidget(self.recomputePushButton, 0, 1, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem4, 0, 2, 1, 1)
        self.gridLayout_12.addLayout(self.gridLayout_10, 3, 0, 1, 1)
        self.gridLayout_13.addLayout(self.gridLayout_12, 1, 1, 1, 1)
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.dateTimeEdit = QtWidgets.QDateTimeEdit(self.informationTab)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.dateTimeEdit.setFont(font)
        self.dateTimeEdit.setFrame(True)
        self.dateTimeEdit.setReadOnly(True)
        self.dateTimeEdit.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.dateTimeEdit.setCalendarPopup(False)
        self.dateTimeEdit.setObjectName("dateTimeEdit")
        self.gridLayout_8.addWidget(self.dateTimeEdit, 2, 0, 1, 1)
        self.configFileEdit = QtWidgets.QLineEdit(self.informationTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.configFileEdit.sizePolicy().hasHeightForWidth())
        self.configFileEdit.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.configFileEdit.setFont(font)
        self.configFileEdit.setReadOnly(True)
        self.configFileEdit.setObjectName("configFileEdit")
        self.gridLayout_8.addWidget(self.configFileEdit, 1, 0, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_8.addItem(spacerItem5, 3, 0, 1, 1)
        self.sizeSpinbox = QtWidgets.QDoubleSpinBox(self.informationTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sizeSpinbox.sizePolicy().hasHeightForWidth())
        self.sizeSpinbox.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.sizeSpinbox.setFont(font)
        self.sizeSpinbox.setReadOnly(True)
        self.sizeSpinbox.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.sizeSpinbox.setDecimals(1)
        self.sizeSpinbox.setMaximum(99999999.0)
        self.sizeSpinbox.setObjectName("sizeSpinbox")
        self.gridLayout_8.addWidget(self.sizeSpinbox, 0, 0, 1, 1)
        self.gridLayout_13.addLayout(self.gridLayout_8, 1, 2, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem6, 2, 0, 1, 4)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/images/images/info.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.informationTab, icon4, "")
        self.cellcontenttab = QtWidgets.QWidget()
        self.cellcontenttab.setObjectName("cellcontenttab")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.cellcontenttab)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.cellcontent = QtWidgets.QPlainTextEdit(self.cellcontenttab)
        self.cellcontent.setReadOnly(True)
        self.cellcontent.setObjectName("cellcontent")
        self.gridLayout_5.addWidget(self.cellcontent, 0, 0, 1, 1)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/images/images/cellzoom.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.cellcontenttab, icon5, "")
        self.filterTab = QtWidgets.QWidget()
        self.filterTab.setObjectName("filterTab")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.filterTab)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.filterTableWidget = QtWidgets.QTableWidget(self.filterTab)
        self.filterTableWidget.setObjectName("filterTableWidget")
        self.filterTableWidget.setColumnCount(4)
        self.filterTableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.filterTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.filterTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.filterTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.filterTableWidget.setHorizontalHeaderItem(3, item)
        self.filterTableWidget.verticalHeader().setCascadingSectionResizes(True)
        self.gridLayout_6.addWidget(self.filterTableWidget, 0, 0, 1, 1)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/images/images/filtering.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.filterTab, icon6, "")
        self.cleanTab = QtWidgets.QWidget()
        self.cleanTab.setObjectName("cleanTab")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.cleanTab)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.gridLayout_14 = QtWidgets.QGridLayout()
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.groupBox = QtWidgets.QGroupBox(self.cleanTab)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.duplicateComboBox = QtWidgets.QComboBox(self.groupBox)
        self.duplicateComboBox.setObjectName("duplicateComboBox")
        self.duplicateComboBox.addItem("")
        self.duplicateComboBox.addItem("")
        self.duplicateComboBox.addItem("")
        self.duplicateComboBox.addItem("")
        self.gridLayout_16.addWidget(self.duplicateComboBox, 0, 1, 1, 1)
        self.duplicateButton = QtWidgets.QPushButton(self.groupBox)
        self.duplicateButton.setCheckable(True)
        self.duplicateButton.setObjectName("duplicateButton")
        self.gridLayout_16.addWidget(self.duplicateButton, 0, 2, 1, 1)
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setObjectName("label")
        self.gridLayout_16.addWidget(self.label, 0, 0, 1, 1)
        self.infoDuplicates = QtWidgets.QLabel(self.groupBox)
        self.infoDuplicates.setText("")
        self.infoDuplicates.setObjectName("infoDuplicates")
        self.gridLayout_16.addWidget(self.infoDuplicates, 1, 1, 1, 1)
        self.gridLayout_14.addWidget(self.groupBox, 0, 0, 1, 2)
        self.gridLayout_15.addLayout(self.gridLayout_14, 0, 0, 1, 1)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/images/images/compare.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.cleanTab, icon7, "")
        self.groupsTab = QtWidgets.QWidget()
        self.groupsTab.setObjectName("groupsTab")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.groupsTab)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.groupComboBox = QtWidgets.QComboBox(self.groupsTab)
        self.groupComboBox.setObjectName("groupComboBox")
        self.gridLayout_9.addWidget(self.groupComboBox, 0, 0, 1, 1)
        self.groupLineEdit = QtWidgets.QLineEdit(self.groupsTab)
        self.groupLineEdit.setText("liberation.fr/(.*?)/")
        self.groupLineEdit.setObjectName("groupLineEdit")
        self.gridLayout_9.addWidget(self.groupLineEdit, 0, 1, 1, 1)
        self.ignoreCaseCheckBox = QtWidgets.QCheckBox(self.groupsTab)
        self.ignoreCaseCheckBox.setChecked(True)
        self.ignoreCaseCheckBox.setObjectName("ignoreCaseCheckBox")
        self.gridLayout_9.addWidget(self.ignoreCaseCheckBox, 0, 2, 1, 1)
        self.groupPushButton = QtWidgets.QPushButton(self.groupsTab)
        self.groupPushButton.setObjectName("groupPushButton")
        self.gridLayout_9.addWidget(self.groupPushButton, 0, 3, 1, 1)
        self.useGroupsCheckBox = QtWidgets.QCheckBox(self.groupsTab)
        self.useGroupsCheckBox.setObjectName("useGroupsCheckBox")
        self.gridLayout_9.addWidget(self.useGroupsCheckBox, 0, 4, 1, 1)
        self.groupTableWidget = QtWidgets.QTableWidget(self.groupsTab)
        self.groupTableWidget.setObjectName("groupTableWidget")
        self.groupTableWidget.setColumnCount(2)
        self.groupTableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.groupTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.groupTableWidget.setHorizontalHeaderItem(1, item)
        self.groupTableWidget.horizontalHeader().setSortIndicatorShown(True)
        self.gridLayout_9.addWidget(self.groupTableWidget, 1, 0, 1, 5)
        self.tabWidget.addTab(self.groupsTab, "")
        self.selectionsTab = QtWidgets.QWidget()
        self.selectionsTab.setObjectName("selectionsTab")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.selectionsTab)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.selectionsTableWidget = QtWidgets.QTableWidget(self.selectionsTab)
        self.selectionsTableWidget.setEnabled(True)
        self.selectionsTableWidget.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.selectionsTableWidget.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.selectionsTableWidget.setCornerButtonEnabled(True)
        self.selectionsTableWidget.setColumnCount(5)
        self.selectionsTableWidget.setObjectName("selectionsTableWidget")
        self.selectionsTableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.selectionsTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.selectionsTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.selectionsTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.selectionsTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.selectionsTableWidget.setHorizontalHeaderItem(4, item)
        self.selectionsTableWidget.horizontalHeader().setCascadingSectionResizes(True)
        self.selectionsTableWidget.verticalHeader().setVisible(False)
        self.gridLayout_7.addWidget(self.selectionsTableWidget, 0, 0, 1, 1)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/images/images/selections.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.selectionsTab, icon8, "")
        self.gridLayout_4.addWidget(self.splitter_2, 0, 0, 1, 1)
        GroMainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(GroMainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1232, 30))
        self.menubar.setObjectName("menubar")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuDatabase = QtWidgets.QMenu(self.menubar)
        self.menuDatabase.setObjectName("menuDatabase")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        GroMainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(GroMainWindow)
        self.statusbar.setObjectName("statusbar")
        GroMainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(GroMainWindow)
        self.toolBar.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolBar.sizePolicy().hasHeightForWidth())
        self.toolBar.setSizePolicy(sizePolicy)
        self.toolBar.setStyleSheet("")
        self.toolBar.setIconSize(QtCore.QSize(28, 28))
        self.toolBar.setObjectName("toolBar")
        GroMainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionNew = QtWidgets.QAction(GroMainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/images/images/databaseNew.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew.setIcon(icon9)
        self.actionNew.setObjectName("actionNew")
        self.actionGromoteur_Help = QtWidgets.QAction(GroMainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/images/images/help.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGromoteur_Help.setIcon(icon10)
        self.actionGromoteur_Help.setObjectName("actionGromoteur_Help")
        self.actionDelete = QtWidgets.QAction(GroMainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/images/images/databaseDelete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete.setIcon(icon11)
        self.actionDelete.setObjectName("actionDelete")
        self.actionImport_from_Web = QtWidgets.QAction(GroMainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/images/images/web.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImport_from_Web.setIcon(icon12)
        self.actionImport_from_Web.setObjectName("actionImport_from_Web")
        self.actionDatabaseFillFromFolder = QtWidgets.QAction(GroMainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/images/images/fileopen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDatabaseFillFromFolder.setIcon(icon13)
        self.actionDatabaseFillFromFolder.setObjectName("actionDatabaseFillFromFolder")
        self.actionFieldSelect = QtWidgets.QAction(GroMainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/images/images/selector.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFieldSelect.setIcon(icon14)
        self.actionFieldSelect.setObjectName("actionFieldSelect")
        self.actionExport = QtWidgets.QAction(GroMainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/images/images/exportL.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport.setIcon(icon15)
        self.actionExport.setObjectName("actionExport")
        self.actionTools = QtWidgets.QAction(GroMainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/images/images/tools.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionTools.setIcon(icon16)
        self.actionTools.setObjectName("actionTools")
        self.actionNexico = QtWidgets.QAction(GroMainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/images/images/NexicoN.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNexico.setIcon(icon17)
        self.actionNexico.setObjectName("actionNexico")
        self.actionSelection = QtWidgets.QAction(GroMainWindow)
        self.actionSelection.setIcon(icon8)
        self.actionSelection.setObjectName("actionSelection")
        self.actionKeep_only_current_rows = QtWidgets.QAction(GroMainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/images/images/keepRow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionKeep_only_current_rows.setIcon(icon18)
        self.actionKeep_only_current_rows.setObjectName("actionKeep_only_current_rows")
        self.actionRemove_current_rows = QtWidgets.QAction(GroMainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/images/images/removeRow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_current_rows.setIcon(icon19)
        self.actionRemove_current_rows.setObjectName("actionRemove_current_rows")
        self.actionKeep_only_current_columns = QtWidgets.QAction(GroMainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/images/images/keepColumn.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionKeep_only_current_columns.setIcon(icon20)
        self.actionKeep_only_current_columns.setObjectName("actionKeep_only_current_columns")
        self.actionRemove_current_columns = QtWidgets.QAction(GroMainWindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/images/images/removeColumn.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_current_columns.setIcon(icon21)
        self.actionRemove_current_columns.setObjectName("actionRemove_current_columns")
        self.actionOpen_Table = QtWidgets.QAction(GroMainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/images/images/databaseFillTable.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_Table.setIcon(icon22)
        self.actionOpen_Table.setObjectName("actionOpen_Table")
        self.actionDuplicateDatabase = QtWidgets.QAction(GroMainWindow)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/images/images/database.duplicate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDuplicateDatabase.setIcon(icon23)
        self.actionDuplicateDatabase.setObjectName("actionDuplicateDatabase")
        self.actionKeepSelectedRows = QtWidgets.QAction(GroMainWindow)
        self.actionKeepSelectedRows.setIcon(icon18)
        self.actionKeepSelectedRows.setObjectName("actionKeepSelectedRows")
        self.actionRemoveSelectedRows = QtWidgets.QAction(GroMainWindow)
        self.actionRemoveSelectedRows.setIcon(icon19)
        self.actionRemoveSelectedRows.setObjectName("actionRemoveSelectedRows")
        self.actionOnly_this_column = QtWidgets.QAction(GroMainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/images/images/keepColumnTable.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOnly_this_column.setIcon(icon24)
        self.actionOnly_this_column.setObjectName("actionOnly_this_column")
        self.actionHide_this_column = QtWidgets.QAction(GroMainWindow)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/images/images/hideColumnTable.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHide_this_column.setIcon(icon25)
        self.actionHide_this_column.setObjectName("actionHide_this_column")
        self.actionShow_all_columns = QtWidgets.QAction(GroMainWindow)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/images/images/allColumns.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionShow_all_columns.setIcon(icon26)
        self.actionShow_all_columns.setObjectName("actionShow_all_columns")
        self.actionPreferences = QtWidgets.QAction(GroMainWindow)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/images/images/setup.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPreferences.setIcon(icon27)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionlanguageDetector = QtWidgets.QAction(GroMainWindow)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/images/images/languageDetector.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionlanguageDetector.setIcon(icon28)
        self.actionlanguageDetector.setObjectName("actionlanguageDetector")
        self.menuHelp.addAction(self.actionGromoteur_Help)
        self.menuDatabase.addAction(self.actionNew)
        self.menuDatabase.addAction(self.actionDuplicateDatabase)
        self.menuDatabase.addAction(self.actionDelete)
        self.menuDatabase.addAction(self.actionImport_from_Web)
        self.menuDatabase.addAction(self.actionDatabaseFillFromFolder)
        self.menuDatabase.addAction(self.actionTools)
        self.menuDatabase.addAction(self.actionFieldSelect)
        self.menuDatabase.addAction(self.actionNexico)
        self.menuDatabase.addAction(self.actionExport)
        self.menuEdit.addAction(self.actionKeepSelectedRows)
        self.menuEdit.addAction(self.actionRemoveSelectedRows)
        self.menuEdit.addAction(self.actionKeep_only_current_rows)
        self.menuEdit.addAction(self.actionRemove_current_rows)
        self.menuEdit.addAction(self.actionSelection)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionPreferences)
        self.menubar.addAction(self.menuDatabase.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionNew)
        self.toolBar.addAction(self.actionDuplicateDatabase)
        self.toolBar.addAction(self.actionDelete)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionImport_from_Web)
        self.toolBar.addAction(self.actionDatabaseFillFromFolder)
        self.toolBar.addAction(self.actionOpen_Table)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionFieldSelect)
        self.toolBar.addAction(self.actionTools)
        self.toolBar.addAction(self.actionNexico)
        self.toolBar.addAction(self.actionlanguageDetector)
        self.toolBar.addAction(self.actionExport)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionKeep_only_current_rows)
        self.toolBar.addAction(self.actionRemove_current_rows)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionPreferences)
        self.toolBar.addAction(self.actionGromoteur_Help)

        self.retranslateUi(GroMainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(GroMainWindow)

    def retranslateUi(self, GroMainWindow):
        _translate = QtCore.QCoreApplication.translate
        GroMainWindow.setWindowTitle(_translate("GroMainWindow", "Gromoteur"))
        self.corpuslistWidget.setSortingEnabled(True)
        self.databaseContentGroupBox.setTitle(_translate("GroMainWindow", "Database content"))
        self.currentURLLabel_8.setText(_translate("GroMainWindow", "comments:"))
        self.commentTextEdit.setToolTip(_translate("GroMainWindow", "any comments that you may want to add to the database"))
        self.pageSpinbox.setToolTip(_translate("GroMainWindow", "number of pages in the database"))
        self.pageSpinbox.setSuffix(_translate("GroMainWindow", " pages"))
        self.sentenceSpinbox.setToolTip(_translate("GroMainWindow", "number of sentences in the database"))
        self.sentenceSpinbox.setStatusTip(_translate("GroMainWindow", "counts sentences or single lines"))
        self.sentenceSpinbox.setSuffix(_translate("GroMainWindow", " sentences"))
        self.wordSpinbox.setToolTip(_translate("GroMainWindow", "number of characters in the database"))
        self.wordSpinbox.setSuffix(_translate("GroMainWindow", " characters"))
        self.label_2.setText(_translate("GroMainWindow", "Open"))
        self.links2DoSpinbox.setToolTip(_translate("GroMainWindow", "number of links that have been collected but not yet visited"))
        self.links2DoSpinbox.setSuffix(_translate("GroMainWindow", " links remaining"))
        self.linksDoneSpinbox.setToolTip(_translate("GroMainWindow", "number of links that have been followed"))
        self.linksDoneSpinbox.setSuffix(_translate("GroMainWindow", " links followed"))
        self.recomputePushButton.setToolTip(_translate("GroMainWindow", "recompute the general information of this database"))
        self.dateTimeEdit.setToolTip(_translate("GroMainWindow", "last access"))
        self.configFileEdit.setToolTip(_translate("GroMainWindow", "configuration file used in the collection"))
        self.sizeSpinbox.setToolTip(_translate("GroMainWindow", "size on disk"))
        self.sizeSpinbox.setSuffix(_translate("GroMainWindow", " Mb"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.informationTab), _translate("GroMainWindow", "database information"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.informationTab), _translate("GroMainWindow", "general information about the database"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.cellcontenttab), _translate("GroMainWindow", "cell content"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.cellcontenttab), _translate("GroMainWindow", "content of the currently selected cell of the table above"))
        item = self.filterTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("GroMainWindow", "column"))
        item = self.filterTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("GroMainWindow", "="))
        item = self.filterTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("GroMainWindow", "condition"))
        item = self.filterTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("GroMainWindow", "remove"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.filterTab), _translate("GroMainWindow", "current filter"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.filterTab), _translate("GroMainWindow", "list of filters applied to the table above"))
        self.groupBox.setTitle(_translate("GroMainWindow", "Duplicate selection"))
        self.duplicateComboBox.setItemText(0, _translate("GroMainWindow", "all but first"))
        self.duplicateComboBox.setItemText(1, _translate("GroMainWindow", "all but last"))
        self.duplicateComboBox.setItemText(2, _translate("GroMainWindow", "all but shortest url"))
        self.duplicateComboBox.setItemText(3, _translate("GroMainWindow", "all but longest url"))
        self.duplicateButton.setText(_translate("GroMainWindow", "Select"))
        self.label.setText(_translate("GroMainWindow", "Select duplicate rows in visible columns"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.cleanTab), _translate("GroMainWindow", "Clean"))
        self.groupLineEdit.setToolTip(_translate("GroMainWindow", "regular expression for grouping"))
        self.ignoreCaseCheckBox.setText(_translate("GroMainWindow", "ignore case"))
        self.groupPushButton.setText(_translate("GroMainWindow", "{ group"))
        self.useGroupsCheckBox.setText(_translate("GroMainWindow", "use groups"))
        self.groupTableWidget.setSortingEnabled(True)
        item = self.groupTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("GroMainWindow", "group"))
        item = self.groupTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("GroMainWindow", "number pages"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.groupsTab), _translate("GroMainWindow", "{ Groups"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.groupsTab), _translate("GroMainWindow", "grouping pages"))
        self.selectionsTableWidget.setSortingEnabled(True)
        item = self.selectionsTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("GroMainWindow", "name"))
        item = self.selectionsTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("GroMainWindow", "textualization"))
        item = self.selectionsTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("GroMainWindow", "columns"))
        item = self.selectionsTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("GroMainWindow", "filters"))
        item = self.selectionsTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("GroMainWindow", "remove"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.selectionsTab), _translate("GroMainWindow", "selections"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.selectionsTab), _translate("GroMainWindow", "selections of pages"))
        self.menuHelp.setTitle(_translate("GroMainWindow", "He&lp"))
        self.menuDatabase.setTitle(_translate("GroMainWindow", "&Database"))
        self.menuEdit.setTitle(_translate("GroMainWindow", "Edit"))
        self.toolBar.setWindowTitle(_translate("GroMainWindow", "toolBar"))
        self.actionNew.setText(_translate("GroMainWindow", "&New"))
        self.actionNew.setToolTip(_translate("GroMainWindow", "create new Database"))
        self.actionNew.setShortcut(_translate("GroMainWindow", "Ctrl+N"))
        self.actionGromoteur_Help.setText(_translate("GroMainWindow", "&Help"))
        self.actionGromoteur_Help.setShortcut(_translate("GroMainWindow", "F1"))
        self.actionDelete.setText(_translate("GroMainWindow", "De&lete"))
        self.actionDelete.setToolTip(_translate("GroMainWindow", "delete selected database"))
        self.actionDelete.setShortcut(_translate("GroMainWindow", "Del"))
        self.actionImport_from_Web.setText(_translate("GroMainWindow", "&Web"))
        self.actionImport_from_Web.setToolTip(_translate("GroMainWindow", "use Gromoteur to fill the database"))
        self.actionImport_from_Web.setShortcut(_translate("GroMainWindow", "Ctrl+G"))
        self.actionDatabaseFillFromFolder.setText(_translate("GroMainWindow", "&Folder"))
        self.actionDatabaseFillFromFolder.setToolTip(_translate("GroMainWindow", "add a whole folder of files to the database"))
        self.actionDatabaseFillFromFolder.setShortcut(_translate("GroMainWindow", "Ctrl+O"))
        self.actionFieldSelect.setText(_translate("GroMainWindow", "&Select"))
        self.actionFieldSelect.setToolTip(_translate("GroMainWindow", "select parts of pages into a new column"))
        self.actionFieldSelect.setShortcut(_translate("GroMainWindow", "Ctrl+T"))
        self.actionExport.setText(_translate("GroMainWindow", "&Export"))
        self.actionExport.setToolTip(_translate("GroMainWindow", "export current view to file"))
        self.actionExport.setShortcut(_translate("GroMainWindow", "Ctrl+E"))
        self.actionTools.setText(_translate("GroMainWindow", "&Tools"))
        self.actionTools.setToolTip(_translate("GroMainWindow", "apply exterior tools like lemmatizers"))
        self.actionNexico.setText(_translate("GroMainWindow", "Ne&xico"))
        self.actionNexico.setToolTip(_translate("GroMainWindow", "satistical Analysis"))
        self.actionNexico.setShortcut(_translate("GroMainWindow", "Ctrl+X"))
        self.actionSelection.setText(_translate("GroMainWindow", "&Selection"))
        self.actionSelection.setToolTip(_translate("GroMainWindow", "make a selection from the current filters"))
        self.actionSelection.setShortcut(_translate("GroMainWindow", "Ctrl+F"))
        self.actionKeep_only_current_rows.setText(_translate("GroMainWindow", "K&eep"))
        self.actionKeep_only_current_rows.setToolTip(_translate("GroMainWindow", "Keep only currently visible rows"))
        self.actionRemove_current_rows.setText(_translate("GroMainWindow", "Re&move"))
        self.actionRemove_current_rows.setToolTip(_translate("GroMainWindow", "Remove currently visible rows"))
        self.actionKeep_only_current_columns.setText(_translate("GroMainWindow", "Keep columns"))
        self.actionRemove_current_columns.setText(_translate("GroMainWindow", "Remove columns"))
        self.actionOpen_Table.setText(_translate("GroMainWindow", "Table"))
        self.actionOpen_Table.setToolTip(_translate("GroMainWindow", "open a tab separated table"))
        self.actionOpen_Table.setShortcut(_translate("GroMainWindow", "Ctrl+T"))
        self.actionDuplicateDatabase.setText(_translate("GroMainWindow", "&Duplicate"))
        self.actionDuplicateDatabase.setToolTip(_translate("GroMainWindow", "duplicate the current database"))
        self.actionKeepSelectedRows.setText(_translate("GroMainWindow", "&Keep only selected rows"))
        self.actionKeepSelectedRows.setToolTip(_translate("GroMainWindow", "Keep only selected rows"))
        self.actionRemoveSelectedRows.setText(_translate("GroMainWindow", "&Remove selected rows"))
        self.actionRemoveSelectedRows.setToolTip(_translate("GroMainWindow", "Remove selected rows"))
        self.actionOnly_this_column.setText(_translate("GroMainWindow", "Show only this column"))
        self.actionOnly_this_column.setToolTip(_translate("GroMainWindow", "show only this column"))
        self.actionHide_this_column.setText(_translate("GroMainWindow", "hide this column"))
        self.actionHide_this_column.setToolTip(_translate("GroMainWindow", "hide this column"))
        self.actionShow_all_columns.setText(_translate("GroMainWindow", "Show all columns"))
        self.actionShow_all_columns.setToolTip(_translate("GroMainWindow", "Show all columns"))
        self.actionPreferences.setText(_translate("GroMainWindow", "&Preferences"))
        self.actionPreferences.setToolTip(_translate("GroMainWindow", "Settings of preferences"))
        self.actionlanguageDetector.setText(_translate("GroMainWindow", "languages"))
        self.actionlanguageDetector.setToolTip(_translate("GroMainWindow", "open languageDetector"))


#import groressources_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    GroMainWindow = QtWidgets.QMainWindow()
    ui = Ui_GroMainWindow()
    ui.setupUi(GroMainWindow)
    GroMainWindow.show()
    sys.exit(app.exec_())
